<?xml version="1.0" encoding="UTF-8"?>

<!--
  ~ Copyright (c) 2018-2019.
  ~ Beijing sky blue technology co., LTD.
  ~ All rights reserved
  ~
  ~ author: sourcod
  ~ github: https://github.com/WilleamZhao
  ~ site：http://codframe.com
  -->

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.tlkj</groupId>
    <artifactId>tlkj.codframe</artifactId>
    <packaging>pom</packaging>
    <version>1.0.3</version>
    <modules>
        <module>cod-dao</module>
        <module>cod-model</module>
        <module>cod-util</module>
        <module>cod-filter</module>
        <module>cod-core</module>
        <module>cod-log</module>
        <module>cod-common</module>
        <module>cod-wechat</module>
        <module>cod-message</module>
        <module>cod-cache</module>
        <module>cod-apple</module>
        <module>cod-search</module>
        <module>cod-mybatis</module>
        <module>cod-user</module>
        <module>cod-config</module>
        <module>cod-test</module>
        <module>cod-view</module>
        <module>cod-launch</module>
        <module>cod-package</module>
        <module>cod-server</module>
        <module>cod-boot</module>
        <module>cod-http</module>
        <module>cod-admin</module>
        <module>cod-data</module>
        <module>cod-file</module>
        <module>cod-email</module>
        <module>cod-video</module>
        <module>cod-framework-bom</module>
    </modules>

    <name>codframe</name>
    <url>http://codframe.sourcod.com</url>

    <properties>
        <!-- 编码 -->
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

        <!-- java1.8 -->
        <maven.compiler.version>3.8.0</maven.compiler.version>
        <maven.compiler.source>1.8</maven.compiler.source>
        <maven.compiler.target>1.8</maven.compiler.target>

        <jdk.version>1.8</jdk.version>

        <maven.jar.plugin.version>2.4</maven.jar.plugin.version>

        <!-- java -->
        <java.version>1.8</java.version>

        <!-- servlet -->
        <servlet.version>3.1.0</servlet.version>

        <!-- jetty -->
        <jetty.version>9.4.12.v20180830</jetty.version>

        <!-- spring -->
        <spring.version>4.1.6.RELEASE</spring.version>

        <!-- jsoup -->
        <jsoup.version>1.8.3</jsoup.version>

        <!-- database -->
        <mysql.version>5.1.34</mysql.version>

        <!-- guava -->
        <guava.version>19.0</guava.version>

        <!-- taglibs -->
        <standard.version>1.1.2</standard.version>

        <!-- json -->
        <jackson.version>2.9.5</jackson.version>
        <gson.version>2.8.0</gson.version>

        <!-- codLog -->
        <slf4j.version>1.7.25</slf4j.version>
        <log4j.version>1.2.17</log4j.version>
        <aliLog.version>0.6.6</aliLog.version>

        <!-- excel -->
        <poi.version>3.17</poi.version>

        <!-- shiro -->
        <shiro.version>1.4.0</shiro.version>

        <!-- commons -->
        <commons.lang.version>3.4</commons.lang.version>
        <commons.fileupload.version>1.3.2</commons.fileupload.version>
        <commons.codec.version>1.10</commons.codec.version>
        <commons.io.version>2.4</commons.io.version>
        <commons.beanutils.version>1.9.3</commons.beanutils.version>

        <!-- aliyun -->
        <!-- file -->
        <aliOss.version>2.4.0</aliOss.version>

        <!-- cache -->
        <!-- memcached -->
        <spymemcached.version>2.8.4</spymemcached.version>
        <!-- ehcache -->
        <ehcache.version>2.6.10</ehcache.version>
        <!-- redis -->
        <jedis.version>2.9.0</jedis.version>

        <!-- configuration -->
        <yaml.version>1.17</yaml.version>

        <!-- codFrame框架 -->
        <codframe.version>${project.version}</codframe.version>

        <!--
        <codframe.nexus.releases.url>http://192.168.3.21:8081/repository/maven-releases/</codframe.nexus.releases.url>
        <codframe.nexus.snapshots.url>http://192.168.3.21:8081/repository/maven-snapshots/</codframe.nexus.snapshots.url>
        -->

        <codframe.nexus.releases.url>https://nexus.sourcod.com/repository/maven-releases/</codframe.nexus.releases.url>
        <codframe.nexus.snapshots.url>https://nexus.sourcod.com/repository/maven-snapshots/</codframe.nexus.snapshots.url>

        <!-- mail -->
        <mail.version>1.6.2</mail.version>

        <!-- UserAgentUtils -->
        <userAgentUtils.version>1.21</userAgentUtils.version>

        <!-- jjwt-->
        <jjwt.version>0.7.0</jjwt.version>
        <jwt.version>3.1.0</jwt.version>

        <!-- pinyin4j -->
        <pinyin4j.version>2.5.0</pinyin4j.version>

        <!-- lombok -->
        <lombok.version>1.16.20</lombok.version>

    </properties>


    <dependencies>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>4.11</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <version>${lombok.version}</version>
        </dependency>

        <!-- spring -->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-core</artifactId>
            <version>${spring.version}</version>
            <exclusions>
                <exclusion>
                    <groupId>commons-logging</groupId>
                    <artifactId>commons-logging</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

        <!--<dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>jcl-over-slf4j</artifactId>
            <version>${slf4j.version}</version>
        </dependency>-->

        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-context</artifactId>
            <version>${spring.version}</version>
        </dependency>

        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-webmvc</artifactId>
            <version>${spring.version}</version>
        </dependency>

        <!-- 配置 -->
        <dependency>
            <groupId>org.yaml</groupId>
            <artifactId>snakeyaml</artifactId>
            <version>${yaml.version}</version>
        </dependency>

        <!-- javax.servlet-api -->
        <!--<dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>javax.servlet-api</artifactId>
            <version>${servlet.version}</version>
        </dependency>-->

        <!-- json -->
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-annotations</artifactId>
            <version>${jackson.version}</version>
        </dependency>

        <!-- 添加日志支持 -->
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
            <version>${slf4j.version}</version>
        </dependency>

        <dependency>
            <groupId>log4j</groupId>
            <artifactId>log4j</artifactId>
            <version>${log4j.version}</version>
        </dependency>

        <!-- slf4j-log4j12 -->
        <!--<dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-log4j12</artifactId>
            <version>1.7.25</version>
        </dependency>

        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
            <version>1.1.6</version>
        </dependency>-->

        <!-- mail -->
        <dependency>
            <groupId>javax.mail</groupId>
            <artifactId>javax.mail-api</artifactId>
            <version>${mail.version}</version>
        </dependency>

        <dependency>
            <groupId>javax.activation</groupId>
            <artifactId>activation</artifactId>
            <version>1.1.1</version>
        </dependency>

        <!-- commons -->
        <!--<dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-io</artifactId>
            <version>${commons.io.version}</version>
        </dependency>-->

        <!-- https://mvnrepository.com/artifact/commons-io/commons-io -->
        <dependency>
            <groupId>commons-io</groupId>
            <artifactId>commons-io</artifactId>
            <version>${commons.io.version}</version>
        </dependency>


        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
            <version>${commons.lang.version}</version>
        </dependency>

        <dependency>
            <groupId>commons-beanutils</groupId>
            <artifactId>commons-beanutils</artifactId>
            <version>${commons.beanutils.version}</version>
            <exclusions>
                <exclusion>
                    <groupId>commons-logging</groupId>
                    <artifactId>commons-logging</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

        <dependency>
            <groupId>commons-codec</groupId>
            <artifactId>commons-codec</artifactId>
            <version>${commons.codec.version}</version>
        </dependency>

        <dependency>
            <groupId>commons-fileupload</groupId>
            <artifactId>commons-fileupload</artifactId>
            <version>${commons.fileupload.version}</version>
        </dependency>

    </dependencies>

    <profiles>
        <!-- 开发环境 -->
        <profile>
            <id>dev</id>
            <properties>
                <env>dev</env>
            </properties>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
        </profile>
        <!-- 开发环境 -->
        <profile>
            <id>test</id>
            <properties>
                <env>test</env>
            </properties>
            <activation>
                <activeByDefault>false</activeByDefault>
            </activation>
        </profile>
        <!-- 验收环境 -->
        <profile>
            <id>uat</id>
            <properties>
                <env>uat</env>
            </properties>
            <activation>
                <activeByDefault>false</activeByDefault>
            </activation>
        </profile>
        <!-- 生产环境 -->
        <profile>
            <id>prod</id>
            <properties>
                <env>prod</env>
            </properties>
            <activation>
                <activeByDefault>false</activeByDefault>
            </activation>
        </profile>
    </profiles>

    <build>
        <defaultGoal>compile</defaultGoal>

        <!--<finalName>jetty-codframe</finalName>-->
        <sourceDirectory>src/main/java</sourceDirectory>
        <outputDirectory>${project.build.directory}/classes</outputDirectory>

        <pluginManagement>
            <plugins>
                <!-- 配置jdk版本 -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>${maven.compiler.version}</version>
                    <configuration>
                        <source>${maven.compiler.source}</source>
                        <target>${maven.compiler.target}</target>
                        <encoding>${project.build.sourceEncoding}</encoding>
                        <!-- 跳过测试 -->
                        <skip>true</skip>
                        <verbose>false</verbose>
                        <!--<showWarnings>true</showWarnings>-->
                        <!-- 编译器使用的初始内存 -->
                        <meminitial>128m</meminitial>
                        <!-- 编译器使用的最大内存 -->
                        <maxmem>512m</maxmem>
                    </configuration>
                </plugin>

                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>versions-maven-plugin</artifactId>
                    <version>2.3</version>
                    <configuration>
                        <generateBackupPoms>false</generateBackupPoms>
                    </configuration>
                </plugin>


                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-surefire-plugin</artifactId>
                    <version>2.19</version>
                    <!--<dependencies>
                        <dependency>
                            <groupId>org.apache.maven.surefire</groupId>
                            <artifactId>surefire-junit4</artifactId>
                            <version>2.20.1</version>
                        </dependency>
                    </dependencies>-->
                    <!-- 跳过单元测试 -->
                    <configuration>
                        <skip>true</skip>
                    </configuration>
                </plugin>

                <!-- 过滤 -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-enforcer-plugin</artifactId>
                    <version>1.4.1</version>
                    <executions>
                        <execution>
                            <id>default-cli</id>
                            <goals>
                                <goal>enforce</goal>
                            </goals>
                            <phase>validate</phase>
                            <configuration>
                                <rules>
                                    <bannedPlugins>
                                        <!-- will only display a warning but does not fail the build. -->
                                        <level>WARN</level>
                                        <excludes>
                                            <exclude>org.apache.maven.plugins:maven-verifier-plugin</exclude>
                                        </excludes>
                                        <message>Please consider using the maven-invoker-plugin
                                            (http://maven.apache.org/plugins/maven-invoker-plugin/)!
                                        </message>
                                    </bannedPlugins>
                                    <!--<requireMavenVersion>
                                        <message>maven版本太低</message>
                                        <version>3.6.0</version>
                                    </requireMavenVersion>-->
                                    <!--<requireJavaVersion>
                                        <message><![CDATA[You are running an older version of Java. This application requires at least JDK ${java.version}.]]></message>
                                        <version>1.9</version>
                                    </requireJavaVersion>-->
                                    <bannedDependencies>
                                        <!--是否检查传递性依赖(间接依赖)-->
                                        <searchTransitive>true</searchTransitive>
                                        <excludes>
                                            <!--groupId[:artifactId][:version][:type][:scope][:classifier]-->
                                            <exclude>org.testng:testng</exclude>
                                            <exclude>commons-logging:commons-logging</exclude>
                                        </excludes>
                                        <message>don't use TestNG,must use JUnit</message>
                                    </bannedDependencies>
                                    <requireOS>
                                        <family>unix</family>
                                    </requireOS>
                                    <requireProperty>
                                        <property>project.version</property>
                                        <message>"Project version must be specified."</message>
                                        <regex>.*(\d|-SNAPSHOT)$</regex>
                                        <regexMessage>"Project version must end in a number or -SNAPSHOT."
                                        </regexMessage>
                                    </requireProperty>
                                </rules>
                                <fail>true</fail>
                                <failFast>true</failFast>
                            </configuration>
                        </execution>
                        <execution>
                            <id>enforce-install</id>
                            <goals>
                                <goal>enforce</goal>
                            </goals>
                            <phase>install</phase>
                            <configuration>
                                <rules>
                                    <requireProperty>
                                        <property>project.version</property>
                                        <message>"Project version must be specified."</message>
                                        <regex>.*(\d)$</regex>
                                        <regexMessage>"Project version must end in a number."</regexMessage>
                                    </requireProperty>
                                </rules>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>

                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-javadoc-plugin</artifactId>
                    <version>2.9.1</version>
                    <configuration>
                        <reportOutputDirectory>./javadocs</reportOutputDirectory>
                        <destDir>easy-delivery</destDir>
                    </configuration>
                </plugin>

                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>${maven.compiler.version}</version>
                    <configuration>
                        <source>${maven.compiler.source}</source>
                        <target>${maven.compiler.target}</target>
                        <encoding>${project.build.sourceEncoding</encoding>
                    </configuration>
                </plugin>

                <plugin>
                    <groupId>com.github.wvengen</groupId>
                    <artifactId>proguard-maven-plugin</artifactId>
                    <version>2.1.1</version>
                    <executions>
                        <execution>
                            <!-- 混淆时刻，这里是打包的时候混淆-->
                            <phase>package</phase>
                            <goals>
                                <!-- 使用插件的什么功能，当然是混淆-->
                                <goal>proguard</goal>
                            </goals>
                        </execution>
                    </executions>
                    <configuration>
                        <proguardVersion>5.3.3</proguardVersion>
                        <!-- 是否将生成的PG文件安装部署-->
                        <attach>true</attach>
                        <injar>${project.build.finalName}.jar</injar>
                        <outjar>${project.build.finalName}.jar</outjar>
                        <!-- 是否混淆-->
                        <obfuscate>true</obfuscate>
                        <!-- 指定生成文件分类 -->
                        <attachArtifactClassifier>pg</attachArtifactClassifier>
                        <options>
                            <!-- JDK目标版本1.8-->
                            <option>-target 1.8</option>
                            <!-- 不做收缩（删除注释、未被引用代码）-->
                            <option>-dontshrink</option>
                            <!-- 不做优化（变更代码实现逻辑）-->
                            <option>-dontoptimize</option>
                            <!-- 不路过非公用类文件及成员-->
                            <option>-dontskipnonpubliclibraryclasses</option>
                            <option>-dontskipnonpubliclibraryclassmembers</option>
                            <!--不用大小写混合类名机制-->
                            <option>-dontusemixedcaseclassnames</option>

                            <!-- 优化时允许访问并修改有修饰符的类和类的成员 -->
                            <option>-allowaccessmodification</option>
                            <!-- 确定统一的混淆类的成员名称来增加混淆-->
                            <option>-useuniqueclassmembernames</option>
                            <!-- 不混淆所有包名-->
                            <option>-keeppackagenames</option>

                            <!-- 需要保持的属性：异常，注解等-->
                            <!--<option>-keepattributes Exceptions,InnerClasses,Signature,Deprecated,SourceFile,LocalVariable*Table,*Annotation*,Synthetic,EnclosingMethod
                          </option>-->
                            <!-- 不混淆所有的set/get方法 -->
                            <option>-keepclassmembers public class * {void set*(***);*** get*();}</option>

                            <!-- 不混淆包下的所有类名，且类中的方法也不混淆-->
                            <!--<option>-keep class com.tlkj.cod.bboss.SystemConfig { <methods>; }</option>
                            <option>-keep class com.tlkj.cod.framework.** { *; }</option>
                            <option>-keep class com.tlkj.cod.controller.** { <methods>; }</option>
                            <option>-keep class com.tlkj.cod.dao.** { <methods>; }</option>
                            <option>-keep class com.tlkj.cod.exception { <methods>; }</option>
                            <option>-keep class com.tlkj.cod.model.** { <methods>; }</option>-->

                        </options>
                        <!--class 混淆后输出的jar包-->
                        <!--<outjar>${project.build.finalName}-pg.jar</outjar>-->
                        <!-- 添加依赖，这里你可以按你的需要修改，这里测试只需要一个JRE的Runtime包就行了 -->
                        <libs>
                            <lib>${java.home}/lib/rt.jar</lib>
                            <lib>${java.home}/lib/jce.jar</lib>
                        </libs>
                        <!-- 对什么东西进行加载，这里仅有classes成功，毕竟你也不可能对配置文件及JSP混淆吧-->
                        <injar>classes</injar>
                        <!-- 输出目录-->
                        <outputDirectory>${project.build.directory}</outputDirectory>
                    </configuration>
                    <dependencies>
                        <dependency>
                            <groupId>net.sf.proguard</groupId>
                            <artifactId>proguard-base</artifactId>
                            <version>6.0.2</version>
                            <!--<scope>runtime</scope>-->
                        </dependency>
                    </dependencies>
                </plugin>


            </plugins>
        </pluginManagement>
    </build>

    <distributionManagement>
        <repository>
            <id>tlkj-releases</id>
            <name>tlkj-releases</name>
            <url>${codframe.nexus.releases.url}</url>
        </repository>
        <snapshotRepository>
            <id>tlkj-snapshots</id>
            <name>tlkj-snapshots</name>
            <url>${codframe.nexus.snapshots.url</url>
        </snapshotRepository>
    </distributionManagement>
</project>
