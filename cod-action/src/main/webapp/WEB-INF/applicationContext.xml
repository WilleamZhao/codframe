<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright (c) 2018-2018.
  ~ Beijing blue sky technology co., LTD.
  ~ All rights reserved
  ~
  ~ author: sourcod
  ~ github: https://github.com/WilleamZhao
  ~ site：http://codframe.com
  -->
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:util="http://www.springframework.org/schema/util"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd">

    <bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
        <property name="subjectFactory" ref="subjectFactory" />
        <!--<property name="cacheManager" ref="cacheManager" />-->
        <property name="authenticator" ref="authenticator" />
        <property name="sessionManager" ref="sessionManager" />
        <property name="subjectDAO" ref="subjectDAO"/>

        <property name="realms">
            <list>
                <ref bean="codRealm"/>
                <!--<ref bean="secondRealm"/>-->
            </list>
        </property>
    </bean>

    <!-- Subject工厂 -->
    <bean id="subjectFactory" class="com.tlkj.cod.core.security.mgt.StatelessDefaultSubjectFactory"/>

    <!--自定义SessionManager-->
    <bean id="sessionManager" class="com.tlkj.cod.core.security.session.AccessTokenSessionManager" />

    <!-- 设置上传文件最大值   1M=1*1024*1024(B)=1048576 bytes -->
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <!-- 100M -->
        <property name="maxUploadSize" value="104857600" />
    </bean>

    <!--解决报错，组装默认的subjectDAO-->
    <bean id="subjectDAO" class="org.apache.shiro.mgt.DefaultSubjectDAO">
        <property name="sessionStorageEvaluator" ref="sessionStorageEvaluator"/>
    </bean>
    <bean id="sessionStorageEvaluator" class="org.apache.shiro.mgt.DefaultSessionStorageEvaluator">
        <property name="sessionStorageEnabled" value="false"/>
    </bean>

    <bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">

        <property name="securityManager" ref="securityManager" />
        <property name="filters">
            <util:map>
                <entry key="statelessAuthc" value-ref="statelessAuthcFilter"/>
                <!--<entry key="usernamepasswordAuthc" value-ref="statelessAuthcFilter"/>-->
            </util:map>
        </property>
        <property name="loginUrl" value="/login" />
        <!-- TODO 待提取 -->
        <property name="successUrl" value="/" />
        <property name="unauthorizedUrl" value="/loginPrevent" />

        <!--初始配置，现采用自定义-->
        <property name="filterChainDefinitions" >
            <value>
                /** = anon
                /system/login/createCode = anon
                /api/** = statelessAuthc
                /index = anon
                /index.jsp = anon
                /action/** = statelessAuthc
                <!--/system/login/** = statelessAuthc-->
                <!--/system/** = statelessAuthc-->
            </value>
        </property>
    </bean>

    <bean id="cacheManager" class="com.tlkj.cod.core.security.cache.impl.MemcachedCacheManagerImpl" />

    <bean id="codRealm" class="com.tlkj.cod.core.security.realm.CodRealm">
        <!--<property name="credentialsMatcher">
            <bean class="org.apache.shiro.authc.credential.HashedCredentialsMatcher">
                <property name="hashAlgorithmName" value="MD5" />
                <property name="hashIterations" value="1024" />
            </bean>
        </property>-->
        <property name="credentialsMatcher" ref="codCredentialsMatcher"/>
    </bean>

    <!--<bean id="secondRealm" class="com.tlkj.cod.core.security.realm.CodRealm">
        <property name="credentialsMatcher">
            <bean class="org.apache.shiro.authc.credential.HashedCredentialsMatcher">
                <property name="hashAlgorithmName" value="SHA1" />
                <property name="hashIterations" value="1024" />
            </bean>
        </property>
    </bean>-->

    <bean id="authenticator" class="org.apache.shiro.authc.pam.ModularRealmAuthenticator">
        <property name="authenticationStrategy">
            <bean class="org.apache.shiro.authc.pam.AtLeastOneSuccessfulStrategy" />
        </property>
    </bean>

    <bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor"/>

    <bean class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator" depends-on="lifecycleBeanPostProcessor"/>
    <bean class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
        <property name="securityManager" ref="securityManager"/>
    </bean>

    <bean id="statelessAuthcFilter" class="com.tlkj.cod.core.security.login.LoginFilter"/>

    <bean id="codCredentialsMatcher" class="com.tlkj.cod.core.security.matcher.CodCredentialsMatcher"/>
</beans>