# 通过根日志记录器指定日志级别及输出源
# 日志输出的优先级：  debug < info < warn < error < fatal
# 定义根日志记录器的日志级别(info)及输出源的别名(console,myFile)
# 该定义让日志在控制台和文件输出，并且只输出info级别以上的日志
log4j.rootLogger = info,startLog
#info,stdout,D,E

# 开机启动log
log4j.appender.startLog=com.tlkj.cod.log.facade.CodStartAppender

# log4j2clog
log4j.appender.codLog=com.tlkj.cod.log.facade.Log4jCodAppender

### 输出信息到控制抬 ###
log4j.appender.stdout = org.apache.log4j.ConsoleAppender
log4j.appender.stdout.DatePattern = yyyy-MM-dd
log4j.appender.stdout.Target = System.out
log4j.appender.stdout.layout = org.apache.log4j.PatternLayout
log4j.appender.stdout.layout.ConversionPattern = %m%n

### info
#log4j.appender.info = org.apache.log4j.DailyRollingFileAppender
#log4j.appender.info.DatePattern = yyyy-MM-dd
#log4j.appender.info.File = ./logs/log.log
#log4j.appender.info.Append = true
#log4j.appender.info.Threshold = DEBUG
#log4j.appender.info.layout = org.apache.log4j.PatternLayout
#log4j.appender.info.layout.ConversionPattern = %m%n

### 输出DEBUG 级别以上的日志 ###
#log4j.appender.D = org.apache.log4j.DailyRollingFileAppender
#log4j.appender.D.File = ./logs/log.log
#log4j.appender.D.Append = true
#log4j.appender.D.Threshold = DEBUG
#log4j.appender.D.layout = org.apache.log4j.PatternLayout
#log4j.appender.D.layout.ConversionPattern = %-d{yyyy-MM-dd HH:mm:ss}  [ %t:%r ] - [ %p ]  %m%n

### 输出ERROR 级别以上的日志 ###
#log4j.appender.E = org.apache.log4j.DailyRollingFileAppender
#log4j.appender.E.File =./logs/error.log
#log4j.appender.E.Append = true
#log4j.appender.E.Threshold = ERROR
#log4j.appender.E.layout = org.apache.log4j.PatternLayout
#log4j.appender.E.layout.ConversionPattern = %-d{yyyy-MM-dd HH:mm:ss}  [ %t:%r ] - [ %p ]  %m%n
